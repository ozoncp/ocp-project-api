// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ozoncp/ocp-project-api/internal/saver (interfaces: Saver)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/ozoncp/ocp-project-api/internal/models"
)

// MockSaver is a mock of Saver interface.
type MockSaver struct {
	ctrl     *gomock.Controller
	recorder *MockSaverMockRecorder
}

// MockSaverMockRecorder is the mock recorder for MockSaver.
type MockSaverMockRecorder struct {
	mock *MockSaver
}

// NewMockSaver creates a new mock instance.
func NewMockSaver(ctrl *gomock.Controller) *MockSaver {
	mock := &MockSaver{ctrl: ctrl}
	mock.recorder = &MockSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSaver) EXPECT() *MockSaverMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockSaver) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockSaverMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockSaver)(nil).Close))
}

// SaveProject mocks base method.
func (m *MockSaver) SaveProject(arg0 models.Project) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SaveProject", arg0)
}

// SaveProject indicates an expected call of SaveProject.
func (mr *MockSaverMockRecorder) SaveProject(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveProject", reflect.TypeOf((*MockSaver)(nil).SaveProject), arg0)
}

// SaveRepo mocks base method.
func (m *MockSaver) SaveRepo(arg0 models.Repo) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SaveRepo", arg0)
}

// SaveRepo indicates an expected call of SaveRepo.
func (mr *MockSaverMockRecorder) SaveRepo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveRepo", reflect.TypeOf((*MockSaver)(nil).SaveRepo), arg0)
}
